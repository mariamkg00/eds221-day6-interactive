---
title: "Day  6 Interactive"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(here)
library(janitor)
```

```{r}
wb_indicators <- read_csv(here("data" , "wb_indicators.csv"), na = c("..",""))
```

```{r}
#melt the years columns 
wb_indicators_long <- wb_indicators %>% 
  pivot_longer(cols = `2001 [YR2001]`:`2020 [YR2020]`,
               names_to = "year",
               values_to = "indicator_value")

#how would you work with the year column? seperate it into two seperate things, many ways, can be based on characters, space or square bracket. negative sign means get rid of it , select is columns filter is rows 
wb_indicators_clean <- wb_indicators_long %>% 
  tidyr::separate(col=year, into =c("year", "year_chr"), sep = " ") %>% 
  dplyr::select(-year_chr, -`Country Code`, -`Series Code`)

#each of the series  names needs to be its own column name, so use pivot wider
```

```{r}
#drop_na complete case deletion where values are missing. use unique any time there is a categorical variable , any value where there is a  missing series then u drop it
#new name is what you get instead of old name , doesn't depend on position, pulling from old column name. renaming columns based on name 
wb_indicators_tidy <- wb_indicators_clean %>% 
  tidyr::drop_na(`Series Name`) %>% 
  tidyr::pivot_wider(names_from = `Series Name`,
                     values_from = indicator_value) %>% 
  dplyr::rename(country = "Country Name",
                access_fuels_pp = "Access to clean fuels and technologies for cooking (% of population)",
              access_electricity_pp = "Access to electricity (% of population)",
              co2_emissions_kt = "CO2 emissions (kt)",
              fossil_fuel_cons_pt = "Fossil fuel energy consumption (% of total)",
              water_stress = "Level of water stress: freshwater withdrawal as a proportion of available freshwater resources") %>% 
  dplyr::mutate(year = as.numeric(year))

```

```{r}
library(themeMariam)
library(tidyverse)
ggplot(data = wb_indicators_tidy, aes(x= year, y= co2_emissions_kt)) +
    geom_line(aes(color = country)) +
  theme(albondigas,
        legend.position = "none")

```

```{r}
library(themeMariam)
library(tidyverse)

ggplot(data = mtcars, aes(x = hp, y = mpg)) +
  geom_point()+
  theme_albondigas()






```
